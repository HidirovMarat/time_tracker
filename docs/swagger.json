{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server.",
        "title": "Swagger Example API",
        "contact": {},
        "version": "7.0"
    },
    "host": "localhost:8082",
    "basePath": "/",
    "paths": {
        "//task/task-time": {
            "get": {
                "description": "получить userTaskTime по user_id и startPerio, endPeriod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить userTaskTime",
                "operationId": "get-user_task_time-by-user_id-startPeriod-endPeriod",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/post.TaskTime"
                            }
                        }
                    },
                    "400": {
                        "description": "empty body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "failed to get user_task_time",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/task": {
            "post": {
                "description": "создать task по user_id и description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Создать task",
                "operationId": "create-task-by-user_id-description",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "400": {
                        "description": "empty body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "not save task",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/task/start": {
            "put": {
                "description": "начать отчет времени task, поле start_time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "Начать task time",
                "operationId": "put-task-of-start_time",
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "empty body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "have't task",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/task/stop": {
            "put": {
                "description": "остановить отчет времени task, поле stop_time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "Остановить task time",
                "operationId": "put-task-of-stop_time",
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "empty body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "have't task",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "получить user,также фильтрация и пагинация",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить user",
                "operationId": "get-user-by-id",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/post.User"
                            }
                        }
                    },
                    "400": {
                        "description": "request body is empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "создать user по паспорту и получить данные через другой сервис",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Создать user",
                "operationId": "create-user-by-passport",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "400": {
                        "description": "not correct passport",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "not save user",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "удалить user по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "Удалить user",
                "operationId": "delete-user-by-id",
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "empty body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "have't user",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch user by request date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "Изменить user",
                "operationId": "patch-user-by-user-field",
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "empty body!!",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "post.TaskTime": {
            "type": "object",
            "properties": {
                "hours": {
                    "type": "number"
                },
                "minutes": {
                    "type": "number"
                },
                "task_id": {
                    "type": "integer"
                }
            }
        },
        "post.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passportNumber": {
                    "type": "integer"
                },
                "passportSerie": {
                    "type": "integer"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        }
    }
}